{"version":3,"sources":["bus/taskManager/components/card/Styles.module.scss","elements/tag/index.js","bus/taskManager/components/listItem/index.js","bus/taskManager/types.js","api/config.js","api/index.js","bus/taskManager/actions.js","bus/taskManager/initialCardValues.js","bus/taskManager/hooks/useTaskManager/index.js","bus/taskManager/components/todoList/index.js","bus/taskManager/hooks/useChecklist/index.js","bus/taskManager/hooks/useChecklist/useChecklistResetter.js","bus/taskManager/hooks/useChecklist/useCheckListUpdater.js","bus/taskManager/hooks/useChecklist/useChecklistFocusInit.js","bus/taskManager/components/checklist/index.js","elements/customDatePicker/index.js","elements/customInput/index.js","elements/customTextrea/index.js","elements/customCheckbox/index.js","bus/taskManager/components/card/tagsOption.js","bus/taskManager/validationSchema.js","bus/taskManager/components/card/index.js","bus/taskManager/hooks/useCard/index.js","bus/taskManager/index.js","bus/taskManager/reducer.js","init/rootReducer.js","init/middleware.js","init/store.js","serviceWorker.js","index.js","app.js","bus/taskManager/components/checklist/Styles.module.scss","bus/taskManager/components/listItem/Styles.module.scss","share/Styles.module.scss","bus/taskManager/components/todoList/Styles.module.scss","bus/taskManager/Styles.module.scss"],"names":["module","exports","Tag","props","tagType","tag","setTag","isSelected","selectedCX","Error","tagsCX","cx","Styles","className","onClick","ListItem","hash","title","deadline","completed","clickHolder","taskCX","task","selected","date","moment","format","id","meta","types","Object","freeze","TASK_START_FETCHING","TASK_STOP_FETCHING","TASK_FILL_TASK","TASK_SET_FETCHING_ERROR","TASK_SELECTED_TASK","root","user","throwError","status","api","fetch","a","async","method","headers","response","create","payload","body","JSON","stringify","update","delete","taskManagerActions","startFetching","type","stopFetching","fill","selectedTask","setFetchingError","error","fetchTasks","dispatch","json","data","message","createTask","batch","updateTask","created","otherProps","deleteTask","endOf","toDate","initialCardValues","checklist","description","useTaskManager","useDispatch","useSelector","state","taskManager","tasks","isLoading","useState","taskSelected","setTaskSelected","useEffect","findTask","find","createNewTask","ToDoList","taskListJSX","length","map","key","listCX","list","empty","useCheckList","setFieldValue","isParentFormChanged","dynamicFields","setDynamicFields","subTasks","initialSubTasks","subTask","initialCompletedTasks","filter","useFormik","initialValues","completedTasks","completedDynamicTasks","refs","enableReinitialize","values","getFieldProps","setValues","resetForm","useChecklistResetter","updatedSubTasks","currentSubTask","idx","isCompleted","includes","dynamicSubTasksStartIndex","updatedDynamicSubTasks","el","useCheckListUpdater","lastDynamicField","ref","current","focus","useChecklistFocusInit","toggleSubtaskCheck","currentHash","completedSubtask","addMore","e","createRef","target","value","futureSubTasks","toggleDynamicTaskCheck","index","originalCompletedTasks","filtered","Set","Checklist","subTasksJSX","currentInputName","currentInputProps","currentInputTitle","currentCompletedTasks","classes","shortid","generate","name","onChange","onBlur","dynamicFieldsJSX","dynamicFieldIdx","currentFieldName","currentFieldProps","currentFieldTitle","label","style","cursor","disabled","placeholder","CustomDatePicker","today","selectedDay","deadlineCX","labelCX","dateCX","minDate","dateFormat","CustomInput","inputValue","CustomTextarea","containreCX","textCX","textareaValue","htmlFor","CustomCheckbox","blockCX","completedCX","styleCX","tagsOption","validationSchema","Yup","shape","min","required","oneOf","of","Card","onSubmit","handleSubmit","errors","isValid","unsaved","undefined","R","isFormBlocked","delTask","useCard","titleErrorJSX","tagErrorJSX","checklistErrorJSX","errorsJSX","keys","tagsJSX","String","ShareStyles","checklistJSX","deleteTaskJSX","cardJSX","head","left","content","text","tags","TaskManager","controls","wrap","initialState","rootReducer","combineReducers","composeEnhancers","createLogger","duration","collapsed","colors","action","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b2429a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task-card\":\"Styles_task-card__30HVz\",\"head\":\"Styles_head__Jrq9c\",\"left\":\"Styles_left__1V0ir\",\"completed\":\"Styles_completed__3rp7y\",\"button-remove-task\":\"Styles_button-remove-task__3A0nE\",\"content\":\"Styles_content__teOla\",\"title\":\"Styles_title__3xoWw\",\"deadline\":\"Styles_deadline__3oYip\",\"label\":\"Styles_label__36bAB\",\"date\":\"Styles_date__3fawl\",\"description\":\"Styles_description__3aXi8\",\"text\":\"Styles_text__f4q1d\",\"form-controls\":\"Styles_form-controls__1_R6L\",\"button-save-task\":\"Styles_button-save-task__3N_CJ\",\"button-reset-task\":\"Styles_button-reset-task__24plX\",\"errors-container\":\"Styles_errors-container__1PVTO\"};","// Core\nimport React from \"react\";\nimport cx from \"classnames\";\n\n// Styles\nimport Styles from \"../../share/Styles.module.scss\";\n\nexport const Tag = (props) => {\n  const { tag, setTag, isSelected, selectedCX } = props;\n\n  let tagType;\n\n  switch (tag) {\n    case \"Sketch\":\n      tagType = \"first\";\n      break;\n    case \"Spotify\":\n      tagType = \"second\";\n      break;\n    case \"Dribble\":\n      tagType = \"third\";\n      break;\n    case \"Behance\":\n      tagType = \"fourth\";\n      break;\n    case \"UX\":\n      tagType = \"fifth\";\n      break;\n    default:\n      throw new Error(\"Wrong tag!\");\n  }\n\n  const tagsCX = cx(`${Styles.tag}`, {[`${selectedCX}`]: isSelected}, `${Styles[tagType]}`,);\n\n  const clickHolder = () => setTag ? setTag(tag) : null;\n\n  return <span className={tagsCX} onClick={clickHolder}>{tag}</span>;\n};\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\n// Elements\nimport { Tag } from \"../../../../elements/tag/\";\n\nexport const ListItem = (props) => {\n  const { hash, title, tag, deadline, completed, clickHolder, isSelected } = props;\n  const taskCX = cx(`${Styles.task}`, { [`${Styles.completed}`]: completed }, { [`${Styles.selected}`]: isSelected });\n\n  const date = moment(deadline).format(\"LL\");\n\n  return (\n    <div id={hash} className={taskCX} onClick={() => clickHolder(hash)}>\n      <span className={Styles.title}>{title}</span>\n      <div className={Styles.meta}>\n        <span className={Styles.deadline}>{date}</span>\n        <Tag tag={tag} />\n      </div>\n    </div>\n  );\n};\n","export const types = Object.freeze({\n  TASK_START_FETCHING: \"TASK_START_FETCHING\",\n\tTASK_STOP_FETCHING: \"TASK_STOP_FETCHING\",\n\tTASK_FILL_TASK: \"TASK_FILL_TASK\",\n\tTASK_SET_FETCHING_ERROR: \"TASK_SET_FETCHING_ERROR\",\n\tTASK_SELECTED_TASK: 'TASK_SELECTED_TASK',\n});\n","export const root = \"https://lab.lectrum.io/rtx/api/todos\";\nexport const user = 'student';","// Config\nimport { root, user } from \"./config\";\n\nconst throwError = (status) => {\n  if (status >= 400 && status < 500) {\n    throw new Error(\"Client Error\");\n  } else if (status >= 500) {\n    throw new Error(\"Server Error\");\n  }\n};\n\n\nexport const api = Object.freeze({\n  fetch: async () => {\n    const response = await fetch(`${root}`, {\n      method: \"GET\",\n      headers: {\n        \"x-user\": user,\n      },\n    });\n\n    throwError(response.status);\n\n    return response;\n  },\n  create: async (payload) => {\n    const response = await fetch(`${root}`, {\n      method: \"POST\",\n      headers: {\n        \"x-user\": user,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n    throwError(response.status);\n\n    return response;\n  },\n  update: async (hash, payload) => {\n    const response = await fetch(`${root}/${hash}`, {\n      method: \"PUT\",\n      headers: {\n        \"x-user\": user,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n    throwError(response.status);\n\n    return response;\n  },\n  delete: async (hash) => {\n    const response = await fetch(`${root}/${hash}`, {\n      method: \"DELETE\",\n      headers: {\n        \"x-user\": user,\n      },\n    });\n\n    throwError(response.status);\n\n    return response;\n  }\n});\n","// Core\nimport { batch } from \"react-redux\";\n\n// Types\nimport { types } from \"./types\";\n\n// Api\nimport { api } from \"../../api/index\";\n\nexport const taskManagerActions = Object.freeze({\n  startFetching: () => {\n    return {\n      type: types.TASK_START_FETCHING,\n    };\n  },\n  stopFetching: () => {\n    return {\n      type: types.TASK_STOP_FETCHING,\n    };\n  },\n  fill: (payload) => {\n    return {\n      type: types.TASK_FILL_TASK,\n      payload,\n    };\n  },\n  selectedTask: (payload) => {\n    return {\n      type: types.TASK_SELECTED_TASK,\n      payload,\n    };\n  },\n  setFetchingError: (error) => {\n    return {\n      type: types.TASK_SET_FETCHING_ERROR,\n      error: true,\n      payload: error,\n    };\n  },\n  // ASYNC\n  fetchTasks: () => async (dispatch) => {\n    dispatch(taskManagerActions.startFetching());\n\n    try {\n      const response = await api.fetch();\n      const { data } = await response.json();\n\n      dispatch(taskManagerActions.fill(data));\n    } catch (err) {\n      const error = {\n        message: err.message,\n      };\n\n      dispatch(taskManagerActions.setFetchingError(error));\n    } finally {\n      dispatch(taskManagerActions.stopFetching());\n    }\n  },\n  createTask: (payload) => async (dispatch) => {\n    dispatch(taskManagerActions.startFetching());\n\n    try {\n      await api.create(payload);\n\n      batch(() => {\n        dispatch(taskManagerActions.selectedTask(null));\n        dispatch(taskManagerActions.fetchTasks());\n      });\n    } catch (err) {\n      const error = {\n        message: err.message,\n      };\n\n      dispatch(taskManagerActions.setFetchingError(error));\n    } finally {\n      dispatch(taskManagerActions.stopFetching());\n    }\n  },\n  updateTask: (payload) => async (dispatch) => {\n    dispatch(taskManagerActions.startFetching());\n\n    delete payload.created;\n\n    const { hash, ...otherProps } = payload;\n\n    try {\n      await api.update(hash, otherProps);\n\n      batch(() => {\n        dispatch(taskManagerActions.selectedTask(null));\n        dispatch(taskManagerActions.fetchTasks());\n      });\n    } catch (err) {\n      const error = {\n        message: err.message,\n      };\n\n      dispatch(taskManagerActions.setFetchingError(error));\n    } finally {\n      dispatch(taskManagerActions.stopFetching());\n    }\n  },\n  deleteTask: (payload) => async (dispatch) => {\n    dispatch(taskManagerActions.startFetching());\n\n    await api.delete(payload);\n\n    batch(() => {\n      dispatch(taskManagerActions.selectedTask(null));\n      dispatch(taskManagerActions.fetchTasks());\n      dispatch(taskManagerActions.stopFetching());\n    });\n  },\n});\n","// Core\nimport moment from \"moment\";\nconst deadline = moment().endOf(\"day\").toDate();\n\nexport const initialCardValues = Object.freeze({\n  title: \"\",\n  tag: \"\",\n  checklist: [],\n  deadline: deadline,\n  completed: false,\n  description: \"\",\n});\n","// Core\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Actions\nimport { taskManagerActions } from \"../../actions\";\n\n// Other\nimport { initialCardValues } from \"../../initialCardValues\";\n\nexport const useTaskManager = () => {\n  const dispatch = useDispatch();\n  const { tasks, error, isLoading, selectedTask } = useSelector((state) => state.taskManager);\n  const [taskSelected, setTaskSelected] = useState(null);\n\n  useEffect(() => {\n    if (!tasks && !isLoading) {\n      dispatch(taskManagerActions.fetchTasks());\n    }\n  }, [dispatch, tasks, isLoading]);\n\n  const clickHolder = (hash) => {\n    setTaskSelected(hash);\n\n    const findTask = tasks && tasks.find((task) => task.hash === hash);\n\n    dispatch(taskManagerActions.selectedTask(findTask));\n  };\n\n  const createNewTask = () => {\n    dispatch(taskManagerActions.selectedTask(initialCardValues));\n  }\n\n  return {\n    taskSelected,\n    selectedTask,\n    tasks,\n    error,\n    isLoading,\n    clickHolder,\n    createNewTask,\n  };\n};\n","// Core\nimport React from \"react\";\nimport cx from \"classnames\";\n\n// Components\nimport { ListItem } from \"../listItem\";\n\n// Hooks\nimport { useTaskManager } from \"../../hooks/useTaskManager\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const ToDoList = () => {\n  const { tasks, isLoading, clickHolder, taskSelected } = useTaskManager();\n\n  const taskListJSX =\n    !isLoading &&\n    tasks &&\n    tasks.length !== 0 &&\n    tasks.map(({ title, tag, hash, deadline, completed}) => {\n      const isSelected = hash === taskSelected ? true : false;\n      return (\n        <ListItem key={hash}\n            hash={hash}\n            title={title}\n            tag={tag}\n            isSelected={isSelected}\n            deadline={deadline}\n            completed={completed}\n            clickHolder={clickHolder}\n        />\n      );\n    });\n\n  const listCX = cx(`${Styles.list}`, {[`${Styles.empty}`]: tasks === null || tasks.length === 0\n  });\n\n  return (\n    <>\n      <div className={listCX}>\n        <div className={Styles.tasks}>{taskListJSX}</div>\n      </div>\n    </>\n  );\n};\n","// Core\nimport { useState, createRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useSelector } from \"react-redux\";\n\n// Hooks\nimport { useCheckListUpdater } from \"./useCheckListUpdater\";\nimport { useChecklistResetter } from \"./useChecklistResetter\";\nimport { useChecklistFocusInit } from \"./useChecklistFocusInit\";\n\nexport const useCheckList = (props) => {\n  const { setFieldValue, isParentFormChanged } = props;\n  const { selectedTask } = useSelector((state) => state.taskManager);\n  const [dynamicFields, setDynamicFields] = useState([]);\n\n  const subTasks = selectedTask && selectedTask.checklist;\n  const initialSubTasks = subTasks && subTasks.map((subTask) => subTask.title);\n  const initialCompletedTasks =\n    selectedTask &&\n    selectedTask.checklist &&\n    selectedTask.checklist.filter((subTask) => subTask.completed === true).map((subTask) => subTask.hash);\n\n  const { values, getFieldProps, setValues, resetForm } = useFormik({\n    initialValues: {\n      subTasks: initialSubTasks || [],\n      completedTasks: initialCompletedTasks || [],\n      completedDynamicTasks: [],\n      refs: [],\n    },\n    enableReinitialize: true,\n  });\n\n  useChecklistResetter({ isParentFormChanged, resetForm, setDynamicFields });\n\n  useCheckListUpdater({ values, selectedTask, setFieldValue, dynamicFields });\n\n  useChecklistFocusInit(dynamicFields);\n\n  const toggleSubtaskCheck = (currentHash) => {\n    const completedSubtask = values.completedTasks;\n\n    if (values && completedSubtask.includes(currentHash)) {\n      setValues({\n        ...values,\n        completedTasks: completedSubtask.filter((hash) => hash !== currentHash),\n      });\n    } else {\n      setValues({\n        ...values,\n        completedTasks: [...completedSubtask, currentHash],\n      });\n    }\n  };\n\n  const toggleDynamicTaskCheck = (index) => {\n    const originalCompletedTasks = values.completedDynamicTasks;\n\n    if (originalCompletedTasks.includes(index)) {\n      const filtered = originalCompletedTasks.filter((currentSubTask) => {\n        return currentSubTask !== index;\n      });\n\n      setValues({\n        ...values,\n        completedTasks: values.completedTasks,\n        completedDynamicTasks: filtered,\n      });\n    } else {\n      setValues({\n        ...values,\n        completedTasks: values.completedTasks,\n        completedDynamicTasks: [...new Set([...values.completedDynamicTasks, index])],\n      });\n    }\n  };\n\n  const addMore = (e) => {\n    const updatedSubTasks = [...values.subTasks];\n    const ref = createRef();\n\n    const latestIndex = values.subTasks.length;\n    updatedSubTasks[latestIndex] = e.target.value;\n\n    setValues({\n      completedTasks: values.completedTasks,\n      completedDynamicTasks: values.completedDynamicTasks,\n      subTasks: updatedSubTasks,\n    });\n\n    const futureSubTasks = [\n      ...dynamicFields,\n      {\n        title: e.target.value,\n        ref: ref,\n      },\n    ];\n\n    setDynamicFields(futureSubTasks);\n    e.target.value = \"\";\n  };\n\n  return {\n    subTasks,\n    getFieldProps,\n    toggleSubtaskCheck,\n    addMore,\n    dynamicFields,\n    toggleDynamicTaskCheck,\n  };\n};\n","// Core\nimport { useEffect } from 'react';\n\nexport const useChecklistResetter = (props) => {\n    const {\n        isParentFormChanged,\n        resetForm,\n        setDynamicFields\n    } = props;\n\n    useEffect(() => {\n        if (isParentFormChanged) {\n            resetForm();\n            setDynamicFields([]);\n        }\n    }, [isParentFormChanged, resetForm, setDynamicFields]);\n};\n","// Core\nimport { useEffect } from \"react\";\n\nexport const useCheckListUpdater = (props) => {\n  const { values, selectedTask, setFieldValue, dynamicFields } = props;\n\n  useEffect(() => {\n    if (values && selectedTask && selectedTask.checklist) {\n      const updatedSubTasks = selectedTask.checklist.map((currentSubTask, idx) => {\n        const isCompleted = values.completedTasks.includes(currentSubTask.hash);\n\n        return {\n          title: values.subTasks[idx],\n          hash: currentSubTask.hash,\n          completed: isCompleted,\n        };\n      });\n      const dynamicSubTasksStartIndex = values.subTasks.length - dynamicFields.length;\n      const updatedDynamicSubTasks = dynamicFields.map((el, idx) => {\n        const isCompleted = values.completedDynamicTasks.includes(idx);\n\n        return {\n          title: values.subTasks[dynamicSubTasksStartIndex + idx],\n          completed: isCompleted,\n        };\n      });\n\n      setFieldValue(\"checklist\", [...updatedSubTasks, ...updatedDynamicSubTasks]);\n    }\n  }, [values, selectedTask, setFieldValue, dynamicFields]);\n};\n","// Core\nimport { useEffect } from 'react';\n\nexport const useChecklistFocusInit = (dynamicFields) => {\n    useEffect(() => {\n        const lastDynamicField = dynamicFields[dynamicFields.length - 1];\n        lastDynamicField && lastDynamicField.ref && lastDynamicField.ref.current.focus();\n    }, [dynamicFields]);\n};\n","// Core\nimport React from \"react\";\nimport cx from \"classnames\";\nimport shortid from \"shortid\";\n\n// Hooks\nimport { useCheckList } from \"../../hooks/useChecklist\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const Checklist = ({ setFieldValue, isParentFormChanged }) => {\n  const { subTasks, getFieldProps, toggleSubtaskCheck, addMore, dynamicFields, toggleDynamicTaskCheck } = useCheckList({\n    setFieldValue,\n    isParentFormChanged,\n  });\n\n  const subTasksJSX =\n    subTasks &&\n    subTasks.map((subTask, idx) => {\n      const currentInputName = `subTasks.${idx}`;\n      const currentInputProps = getFieldProps(currentInputName);\n      const currentInputTitle = currentInputProps && currentInputProps.value;\n      const currentCompletedTasks = getFieldProps(\"completedTasks\").value;\n      const classes = cx(`${Styles[\"sub-task\"]}`, {\n        [`${Styles.completed}`]: currentCompletedTasks && currentCompletedTasks.includes(subTask.hash),\n      });\n\n      return (\n        <div className={classes} key={shortid.generate()}>\n          <button type=\"button\" onClick={() => toggleSubtaskCheck(subTask.hash)} />\n          <input\n            type=\"text\"\n            name={currentInputName}\n            value={currentInputTitle || \"\"}\n            onChange={currentInputProps.onChange}\n            onBlur={currentInputProps.onBlur}\n            ref={subTask.ref}\n          />\n        </div>\n      );\n    });\n\n  const dynamicFieldsJSX = dynamicFields.map((subTask, idx) => {\n    const dynamicFieldIdx = subTasks ? subTasks.length + idx : idx;\n    const currentFieldName = `subTasks.${dynamicFieldIdx}`;\n    const currentFieldProps = getFieldProps(currentFieldName);\n    const currentFieldTitle = currentFieldProps && currentFieldProps.value;\n    const currentCompletedTasks = getFieldProps(\"completedDynamicTasks\").value;\n    const classes = cx(`${Styles[\"sub-task\"]}`, {\n      [`${Styles.completed}`]: currentCompletedTasks && currentCompletedTasks.includes(idx),\n    });\n\n    return (\n      <div className={classes} key={`dynamicField-${idx}`}>\n        <button type=\"button\" onClick={() => toggleDynamicTaskCheck(idx)} />\n        <input\n          type=\"text\"\n          name={currentFieldName}\n          value={currentFieldTitle || \"\"}\n          onChange={currentFieldProps.onChange}\n          onBlur={currentFieldProps.onBlur}\n          ref={subTask.ref}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className={Styles.checklist}>\n      <span className={Styles.label}>Checklist</span>\n      <div className={Styles[\"sub-tasks\"]}>\n        {subTasksJSX}\n        {dynamicFieldsJSX}\n        <div className={Styles[\"sub-task\"]}>\n          <button style={{ cursor: \"inherit\" }} disabled />\n          <input type=\"text\" placeholder=\"Add more\" onChange={addMore} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","// Core\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\n\nexport const CustomDatePicker = (props) => {\n  const { label, setFieldValue, ...otherProps } = props;\n\n  const handleChange = (value) => {\n    setFieldValue(\"deadline\", moment(value).endOf(\"day\").format());\n  };\n\n  const today = moment().endOf(\"day\").toDate();\n\n  const selectedDay = moment(otherProps.value).endOf(\"day\").toDate();\n\n  const value = otherProps.value ? selectedDay : today;\n\n  return (\n    <div className={otherProps.deadlineCX}>\n      <span className={otherProps.labelCX}>{label}</span>\n      <span className={otherProps.dateCX}>\n        <DatePicker \n          onChange={handleChange} \n          minDate={today} \n          value={value} \n          selected={value || null} \n          dateFormat=\"MMMM d, yyyy\"\n        />\n      </span>\n    </div>\n  );\n};\n","// Core\nimport React from 'react';\n\nexport const CustomInput = (props) => {\n    const {\n        name,\n        type,\n        placeholder,\n        cx,\n        value,\n        onChange,\n        onBlur\n    } = props;\n\n    const inputValue = value || '';\n\n    return (\n        <input\n            name={name}\n            type={type}\n            placeholder={placeholder}\n            className={cx}\n            value={inputValue}\n            onChange={onChange}\n            onBlur={onBlur}\n        />\n    );\n};\n","// Core\nimport React from \"react\";\n\nexport const CustomTextarea = (props) => {\n  const { containreCX, labelCX, textCX, label, placeholder, value, id, ...otherProps } = props;\n\n  const textareaValue = value || \"\";\n\n  return (\n    <div className={containreCX}>\n      <label htmlFor={id} className={labelCX}>\n        {label}\n      </label>\n      <textarea \n        id={id} \n        placeholder={placeholder} \n        className={textCX} \n        value={textareaValue} \n        {...otherProps} \n      />\n    </div>\n  );\n};\n","// Core\nimport React from \"react\";\nimport cx from \"classnames\";\n\nexport const CustomCheckbox = ({ blockCX, completedCX, type, name, id, onChange, onBlur, value }) => {\n  const styleCX = cx(`${blockCX}`, { [`${completedCX}`]: value});\n  \n  return (\n    <div className={styleCX}>\n      <input type={type} name={name} id={id} onChange={onChange} onBlur={onBlur} />\n      <label htmlFor={id}>Mark as complete</label>\n    </div>\n  );\n};\n","export const tagsOption = Object.freeze([\"Sketch\", \"Spotify\", \"Dribble\", \"Behance\", \"UX\"]);","// Core\nimport * as Yup from \"yup\";\n\n// Other\nimport { tagsOption } from \"./components/card/tagsOption\";\n\nexport const validationSchema = Yup.object().shape({\n  title: Yup.string().min(3, \"Task title is too short\").required(\"Task title field is required\"),\n  tag: Yup.mixed().oneOf(tagsOption, \"Tag type is invalid\").required(\"Task tag field is required\"),\n  checklist: Yup.array()\n    .of(\n      Yup.object().shape({\n        title: Yup.string().min(3, \"Sub-task title is too short\").required(\"Sub-task title field is required\"),\n      }),\n    )\n    .required(\"Task doesn't contain any sub-tasks\"),\n});\n","// Core\nimport React from \"react\";\nimport shortid from \"shortid\";\n\n// Components\nimport { Checklist } from \"../checklist\";\n\n// Elements\nimport { CustomDatePicker } from \"../../../../elements/customDatePicker\";\nimport { CustomInput } from \"../../../../elements/customInput\";\nimport { CustomTextarea } from \"../../../../elements/customTextrea\";\nimport { CustomCheckbox } from \"../../../../elements/customCheckbox\";\nimport { Tag } from \"../../../../elements/tag\";\n\n// Hooks\nimport { useCard } from \"../../hooks/useCard\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\nimport ShareStyles from \"../../../../share/Styles.module.scss\";\n\n// Other\nimport { tagsOption } from \"./tagsOption\";\n\nexport const Card = () => {\n  const {\n    selectedTask,\n    handleSubmit,\n    getFieldProps,\n    resetForm,\n    setFieldValue,\n    values,\n    errors,\n    isValid,\n    setTag,\n    isFormBlocked,\n    delTask,\n  } = useCard();\n\n  const titleErrorJSX = errors.title && <p>{errors.title}</p>;\n  const tagErrorJSX = errors.tag && <p>{errors.tag}</p>;\n  const checklistErrorJSX =\n    errors.checklist &&\n    (typeof errors.checklist === \"string\" ? (\n      <p>{errors.checklist}</p>\n    ) : (\n      errors.checklist.map((el, idx) => <p key={shortid.generate()}>{`${idx + 1} ${el.title}`}</p>)\n    ));\n\n  const errorsJSX = Object.keys(errors) && Object.keys(errors).length > 0 && (\n    <div className={Styles[\"errors-container\"]}>\n      {titleErrorJSX}\n      {tagErrorJSX}\n      {checklistErrorJSX}\n    </div>\n  );\n\n  const tagsJSX = tagsOption.map((tag, idx) => {\n    return (\n      <Tag\n        key={String(idx)}\n        tag={tag}\n        setTag={setTag}\n        isSelected={values && values.tag === tag}\n        selectedCX={ShareStyles.selected}\n      />\n    );\n  });\n\n  const checklistJSX = values && <Checklist setFieldValue={setFieldValue} isParentFormChanged={isFormBlocked} />;\n\n  const hash = selectedTask && selectedTask.hash && selectedTask.hash;\n  const deleteTaskJSX = selectedTask && selectedTask.hash && (\n    <button type=\"button\" className={Styles[\"button-remove-task\"]} onClick={() => delTask(hash)} />\n  );\n\n  const cardJSX = selectedTask && (\n    <form className={Styles[\"task-card\"]} onSubmit={handleSubmit}>\n      <div className={Styles.head}>\n        <CustomCheckbox\n          blockCX={Styles.left}\n          completedCX={Styles.completed}\n          type=\"checkbox\"\n          name=\"completed\"\n          id=\"completed\"\n          {...getFieldProps(\"completed\")}\n        />\n        {deleteTaskJSX}\n      </div>\n      <div className={Styles.content}>\n        <CustomInput name=\"title\" cx={Styles.title} type=\"text\" placeholder=\"Task title\" {...getFieldProps(\"title\")} />\n        <CustomDatePicker\n          label=\"Due to\"\n          deadlineCX={Styles.deadline}\n          labelCX={Styles.label}\n          dateCX={Styles.date}\n          setFieldValue={setFieldValue}\n          {...getFieldProps(\"deadline\")}\n        />\n        <CustomTextarea\n          containreCX={Styles.description}\n          labelCX={Styles.label}\n          textCX={Styles.text}\n          id=\"description\"\n          label=\"Description\"\n          placeholder=\"Describe your event...\"\n          {...getFieldProps(\"description\")}\n        />\n        {checklistJSX}\n        <div className={ShareStyles.tags}>{tagsJSX}</div>\n        {errorsJSX}\n        <div className={Styles[\"form-controls\"]}>\n          <button type=\"reset\" className={Styles[\"button-reset-task\"]} onClick={resetForm} disabled={isFormBlocked}>\n            Reset\n          </button>\n          <button type=\"submit\" className={Styles[\"button-save-task\"]} disabled={isFormBlocked || !isValid}>\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n\n  return <>{cardJSX}</>;\n};\n","// Core\nimport { useFormik } from \"formik\";\nimport * as R from \"ramda\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Other\nimport { initialCardValues } from \"../../initialCardValues\";\nimport { validationSchema } from \"../../validationSchema\";\n\n// Actions\nimport { taskManagerActions } from \"../../actions\";\n\nexport const useCard = () => {\n  const { selectedTask, isLoading } = useSelector((state) => state.taskManager);\n  const dispatch = useDispatch();\n\n  const saveTask = (values) => {\n    if (values.hash) {\n      dispatch(taskManagerActions.updateTask(values));\n    } else {\n      dispatch(taskManagerActions.createTask(values));\n    }\n  };\n\n  const { handleSubmit, getFieldProps, resetForm, setFieldValue, values, errors, isValid } = useFormik({\n    initialValues: selectedTask,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: saveTask,\n  });\n\n  const isEmpty = selectedTask && selectedTask.hash === undefined;\n\n  const unsaved = isEmpty ? !R.equals(initialCardValues, values) : !R.equals(selectedTask, values);\n  const isFormBlocked = isLoading || !unsaved;\n\n  const setTag = (tag) => {\n    setFieldValue(\"tag\", tag);\n  };\n\n  const delTask = (hash) => {\n    dispatch(taskManagerActions.deleteTask(hash));\n  };\n\n  return {\n    selectedTask,\n    handleSubmit,\n    getFieldProps,\n    resetForm,\n    setFieldValue,\n    values,\n    errors,\n    isValid,\n    setTag,\n    isFormBlocked,\n    delTask,\n  };\n};\n","// Core\nimport React from \"react\";\n\n// Components\nimport { ToDoList } from \"./components/todoList\";\nimport { Card } from \"./components/card\";\n\n// Hooks\nimport { useTaskManager } from \"./hooks/useTaskManager\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const TaskManager = () => {\n  const { createNewTask } = useTaskManager();\n  return (\n    <>\n      <main>\n        <div className={Styles.controls}>\n          <button className={Styles[\"button-create-task\"]} onClick={createNewTask}>New Task</button>\n        </div>\n        <div className={Styles.wrap}>\n          <ToDoList />\n          <Card />\n        </div>\n      </main>\n    </>\n  );\n};\n","// Types\nimport { types } from \"./types\";\n\nconst initialState = Object.freeze({\n  tasks: null,\n  error: null,\n\tisLoading: false,\n\tselectedTask: null,\n});\n\nexport const taskManagerReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.TASK_START_FETCHING:\n      return {\n        ...state,\n        isLoading: true,\n\t\t\t};\n\t\tcase types.TASK_STOP_FETCHING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t}\n\t\tcase types.TASK_FILL_TASK: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: null,\n\t\t\t\ttasks: payload\n\t\t\t}\n\t\tcase types.TASK_SELECTED_TASK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedTask: payload,\n\t\t\t}\n\t\tcase types.TASK_SET_FETCHING_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: true,\n\t\t\t\ttasks: payload\n\t\t\t}\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","// Core\nimport { combineReducers } from \"redux\";\n\n// Reducers\nimport { taskManagerReducer as taskManager } from \"../bus/taskManager/reducer\";\n\nexport const rootReducer = combineReducers({\n  taskManager,\n});\n","// Core\nimport { compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nexport const logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: (action) => {\n      return action.error ? \"firebrick\" : \"deepskyblue\";\n    },\n    prevState: () => \"#1C5FAF\",\n    action: () => \"#149945\",\n    nextState: () => \"#A47104\",\n    error: () => \"#ff0005\",\n  },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === \"development\";\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware = [thunk];\n\nif (developmentEnvironment) {\n  middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { createStore, applyMiddleware } from 'redux';\n\n// Other\nimport { rootReducer } from './rootReducer';\nimport {\n  middleware,\n  composeEnhancers\n} from './middleware';\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Core\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\n\n// Components\nimport { TaskManager } from \"./bus/taskManager\";\n\n// Store\nimport { store } from \"./init/store\";\n\n// Styles\nimport \"./styles/index.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <TaskManager />\n    </Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checklist\":\"Styles_checklist__2YYp2\",\"label\":\"Styles_label__SLaim\",\"sub-tasks\":\"Styles_sub-tasks__2dyTv\",\"sub-task\":\"Styles_sub-task__AC34l\",\"completed\":\"Styles_completed__2VJr0\",\"incompleted\":\"Styles_incompleted__12Qvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Styles_task__ojFk7\",\"selected\":\"Styles_selected__2XxH5\",\"title\":\"Styles_title__2nwt-\",\"meta\":\"Styles_meta__3OeTf\",\"deadline\":\"Styles_deadline__3Fhzw\",\"completed\":\"Styles_completed__2uXY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"Styles_tag__Slf3N\",\"first\":\"Styles_first__gJXia\",\"second\":\"Styles_second__27heG\",\"third\":\"Styles_third__24a1C\",\"fourth\":\"Styles_fourth__2htgq\",\"fifth\":\"Styles_fifth__Ws5zK\",\"tags\":\"Styles_tags__295Vy\",\"selected\":\"Styles_selected__3gMNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Styles_list__2umf-\",\"tasks\":\"Styles_tasks__2_CHB\",\"empty\":\"Styles_empty__2ZKWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Styles_wrap__4kaY2\",\"controls\":\"Styles_controls__hDj5E\",\"button-create-task\":\"Styles_button-create-task__36jnJ\"};"],"sourceRoot":""}